<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sillykay-github-io.pages.dev/</id>
    <title>SillyKay</title>
    <updated>2021-06-06T14:27:53.775Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sillykay-github-io.pages.dev/"/>
    <link rel="self" href="https://sillykay-github-io.pages.dev/atom.xml"/>
    <subtitle>囫囵吞枣
Steam主页：&lt;a href=&quot;https://steamcommunity.com/profiles/76561198357297799&quot;&gt;点此进入&lt;/a&gt;</subtitle>
    <logo>https://sillykay-github-io.pages.dev/images/avatar.png</logo>
    <icon>https://sillykay-github-io.pages.dev/favicon.ico</icon>
    <rights>All rights reserved 2021, SillyKay</rights>
    <entry>
        <title type="html"><![CDATA[ClickHouse学习]]></title>
        <id>https://sillykay-github-io.pages.dev/post/clickhouse-xue-xi/</id>
        <link href="https://sillykay-github-io.pages.dev/post/clickhouse-xue-xi/">
        </link>
        <updated>2021-06-06T07:04:46.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>ClickHouse与Mysql或presto不同，是大小写敏感的。</li>
</ol>
<ul>
<li>有些关键字是不大小写敏感的，具体关键字的情况可以通过系统表system.data_type_families 查询了解。</li>
<li>name (String) — 数据类型的名称.</li>
<li>case_insensitive (UInt8) — 该属性显示是否可以在查询中以不区分大小写的方式使用数据类型名称。</li>
<li>alias_to (String) — 名称为别名的数据类型名称。<br>
SELECT * FROM system.data_type_families</li>
<li>在这举例一些常用不敏感关键字：</li>
<li>DateTime、Date、Decimal、NVARCHAR、VARCHAR、CHAR、TIMESTAMP、INTEGER、INT、BOOLEAN、DOUBLE、BYTE<br>
2. 查询使用（对比或新特性）<br>
SELECT COLUMNS('a') FROM table</li>
<li>可用columns()语法来查询表中列名包含指定字段的数据<br>
SELECT DISTINCT a FROM t1 ORDER BY b ASC</li>
<li>ClickHouse支持使用 DISTINCT 和 ORDER BY 在一个查询中的不同的列。</li>
<li>DISTINCT 子句在 ORDER BY 子句前被执行。</li>
<li>而prestosql或mysql都必须要求排序的字段必须包含在select子句中：<br>
<img src="https://sillykay-github-io.pages.dev//post-images/1622963200960.png" alt="" loading="lazy"><br>
SELECT s, arr FROM arrays_test ARRAY JOIN arr</li>
<li>ARRAY JOIN用于生成一个新表，该表具有包含该初始列中的每个单独数组元素的列，而其他列的值将被重复显示。<br>
GROUP BY</li>
<li>group by在CH中不能像mysql或prestosql中可以写‘group by 1，2，3’来表示根据第123列的字段来分组，必须以字段全称写入‘group by a，b，c’<br>
Limit n,m</li>
<li>ClickHouse允许选择个 m 从跳过第一个结果后的行 n 行</li>
<li>另外ClickHouse支持直接在同层级调用as所命为别名的函数，不需要再外层嵌套<br>
Limit n by a / Limit n,m by a</li>
<li>与查询 LIMIT n BY expressions 子句选择第一个 n 每个不同值的行 expressions. (可理解成分组取有限值）例：<br>
SELECT * FROM limit_by ORDER BY id, val LIMIT 2 BY id</li>
<li>在limit_by表中根据id字段取出每个ID的前二的数据（需用order by排序）<br>
SELECT * FROM limit_by ORDER BY id, val LIMIT 1,2 BY id</li>
<li>在limit_by表中根据id字段取出每个ID的从1开始的往后的两份数据（不包含1），第一个例子等同于limit 0,2 by id</li>
<li>另外limit by跟limit属于不同的子句类型，在同一查询中可以同时使用<br>
SELECT * FROM t_null_nan ORDER BY y NULLS FIRST</li>
<li>CH可通过nulls first关键字让排序时null字段首先显示<br>
SAMPLE k / SAMPLE n /SAMPLE k offset n</li>
<li>对数据进行采样，如sample 0.1为取样10%的数据，用于在数据量过大（内存不足）时通过较少的数据量来获得近似的数据查询结果，而当sample值大于1时，则是模拟大量的数据，来取一个近似值，如sample 100 则会将原先数据复制100倍，来通过较少的数据来获得大量数据的一个近似的数据查询结果。</li>
<li>通过sample k offset n子句，可以指定取样值在数据中的位置跟范围，如SAMPLE 1/10 OFFSET 1/2，表示从数据的后半部分取出10％的样本。<br>
3.函数<br>
toInt() / toFloat() / toDate() / toDecimal()</li>
<li>ClickHouse支持在类型转换函数后增加OrZero/OrNull 子句来处理类型转换后失败的数据返回为0/null。<br>
basename()</li>
<li>在最后一个斜杠或反斜杠后的字符串文本。 此函数通常用于从路径中提取文件名。如果输入的字符串中不包含斜杆或反斜杠，函数返回输入字符串本身。例如：</li>
<li>SELECT 'some/long/path/to/file' AS a, basename(a) 结果为file</li>
<li>SELECT 'somelongpatofile' AS a, basename(a) 结果为somelongpatofile<br>
bar()</li>
<li>bar(x, min, max, width) 当x = max时， 绘制一个宽度与(x - min)成正比且等于width的字符带。其中，x — 要显示的尺寸。</li>
<li>min, max — 整数常量。</li>
<li>width — 常量，可以是正整数或小数。（在matebase测试中最大值为1000）</li>
<li>例：<br>
select substring(msn,1,1) as x,count(1) as num,bar(num,0,3000000,500) AS bar<br>
from dwd.dwd_machine_app_state_info<br>
where &quot;date&quot;&gt;'2021-05-01'<br>
group by x<br>
order by num desc</li>
<li>会根据每个x的记录数，产生根据记录数的字符带，（注：在这里因为app表中date字段跟CH中的不敏感关键字date重复，所以需要加上双引号进行处理，在prestosql中则不需要，在hive中则需要加上斜点<code>date</code>进处理）从而直观的展示数据大小，结果：<br>
<img src="https://sillykay-github-io.pages.dev//post-images/1622963224137.png" alt="" loading="lazy"><br>
floor(a, b) round(a,b)</li>
<li>floor函数跟round函数都是取整函数，区别是round函数会有四舍五入的效果，此外CH的取整函数支持b为负数来取整，(当floor函数的b不填或为零时，默认为不进行取整，也就是原数据输出，而round函数b省略或为零时，则是默认取到整数），例：</li>
<li>floor(123.45, 1) = 123.4, floor(123.45, -1) = 120.</li>
<li>round(3.2, 0) = 3,round(4.1267, 2) = 4.13,round(22,-1) = 20<br>
appendTrailingCharIfAbsent(s,c)</li>
<li>如果’s’字符串非空并且末尾不包含’c’字符，则将’c’字符附加到末尾。<br>
endsWith(s,后缀)/startsWith（s，前缀)</li>
<li>返回是否以指定的后缀结尾/开头。如果字符串以指定的后缀结束/开头，则返回1，否则返回0。<br>
trimLeft(s)/trimRight(s)/trimBoth(s)</li>
<li>返回一个字符串，用于删除左侧/右侧/全部的空白字符。<br>
splitByChar（分隔符，s)/splitByString（分隔符，s)</li>
<li>通过分隔符将s字段拆分成多个子串，两个到区别在于splitByChar的分隔符必须是单字符，而splitByString的分隔符可以由多个字符组成<br>
position(haystack, needle[, start_pos])<br>
position(needle IN haystack)<br>
locate(haystack, needle[, start_pos])</li>
<li>在haystack字段中寻找needle子字符串，返回位置，如果未找到子字符串，则为0(区分大小写，positionCaseInsensitive（）函数不区分大小写，使用跟position一样）。例：</li>
<li>SELECT position('Hello, world!', '!'); 结果为13</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://sillykay-github-io.pages.dev/post/hello-gridea/</id>
        <link href="https://sillykay-github-io.pages.dev/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>